name: Frontend Build and Push

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "cv-web-frontend/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    defaults:
      run:
        working-directory: cv-web-frontend

    outputs:
      BUILD_JOB_IMAGE_TAG: "${{ steps.time.outputs.formattedTime }}00-${{ steps.sha.outputs.sha_short }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current time
        id: time
        uses: josStorer/get-current-time@v2.1.2
        with:
          format: YYYY-MM-DD-HH

      - name: Set Git SHA
        id: sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Image Multi-Arch Image
        env:
          IMAGE_URL: ghcr.io/${{ github.repository_owner }}/cv-web-frontend
          IMAGE_TAG: ${{ steps.time.outputs.formattedTime }}00-${{ steps.sha.outputs.sha_short }}
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t "$IMAGE_URL:$IMAGE_TAG" \
            -t "$IMAGE_URL:latest" \
            --push .

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      BUILD_JOB_IMAGE_TAG: "${{ needs.build-and-push.outputs.BUILD_JOB_IMAGE_TAG }}"
      IMAGE_TAG_KEY: "frontendImageTag"

    # https://dev.to/dtinth/authenticating-as-a-github-app-in-a-github-actions-workflow-27co
    # https://dtinth.github.io/obtain-github-app-installation-access-token/
    steps:
      - name: Obtain a GitHub App Installation Access Token
        id: github-app-token
        run: |
          TOKEN="$(npx obtain-github-app-installation-access-token ci ${{ secrets.GH_APP_CREDENTIALS_TOKEN }})"
          echo "::add-mask::$TOKEN"
          echo "TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Use the obtained token
        run: |
          curl -X POST \
            -H "Authorization: Bearer $TOKEN" \
            -H 'Accept: application/vnd.github.v3+json' \
            -d '{"context":"test","state":"success"}' \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$GITHUB_SHA"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout ArgoCD configs repo
        uses: actions/checkout@v4
        with:
          repository: andrislapins/cv_web
          token: ${{ env.TOKEN }}
          path: configs

      - name: Update and push to ArgoCD configs
        run: |
          cd configs
          ./helm/helm-values-bump.py \
            -f argocd/dev/values.yaml \
            -i ${BUILD_JOB_IMAGE_TAG} \
            -k ${IMAGE_TAG_KEY}
          git config --global user.email "hetzner-cloud-cv-web-gh-app[bot]@users.noreply.github.com"
          git config --global user.name "hetzner-cloud-cv-web-gh-app[bot]"
          git add argocd/dev/values.yaml
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git remote set-url origin https://x-access-token:${{ env.TOKEN }}@github.com/andrislapins/cv_web.git
            git commit -m "[automated version bump]: FRONTEND DEV to $BUILD_JOB_IMAGE_TAG"
            git push
          fi