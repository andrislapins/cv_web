name: Helm Package and Push

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "helm/**"
jobs:
  package-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    defaults:
      run:
        working-directory: helm
      
    outputs:
      BACKEND_HELM_CHART_VERSION: "${{ env.BACKEND_HELM_CHART_VERSION }}"
      FRONTEND_HELM_CHART_VERSION: "${{ env.FRONTEND_HELM_CHART_VERSION }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: prepare - install Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin

      - name: Package Helm Charts
        run: |
          helm package cv-web-backend
          helm package cv-web-frontend

      - name: Push Helm charts to GHCR
        run: |
          helm push cv-web-backend-*.tgz oci://ghcr.io/andrislapins/helm-charts
          helm push cv-web-frontend-*.tgz oci://ghcr.io/andrislapins/helm-charts
      
      - name: Get Helm Chart Versions
        id: chart_versions
        run: |
          BACKEND_HELM_CHART_VERSION=$(helm show chart ./cv-web-backend | grep 'version:' | awk '{print $2}')
          FRONTEND_HELM_CHART_VERSION=$(helm show chart ./cv-web-frontend | grep 'version:' | awk '{print $2}')
          echo "BACKEND_HELM_CHART_VERSION=$BACKEND_HELM_CHART_VERSION" >> $GITHUB_ENV
          echo "FRONTEND_HELM_CHART_VERSION=$FRONTEND_HELM_CHART_VERSION" >> $GITHUB_ENV

  deploy:
    needs: package-and-push
    runs-on: ubuntu-latest

    env:
      BACKEND_HELM_CHART_VERSION: "${{ needs.package-and-push.outputs.BACKEND_HELM_CHART_VERSION }}"
      FRONTEND_HELM_CHART_VERSION: "${{ needs.package-and-push.outputs.FRONTEND_HELM_CHART_VERSION }}"

    steps:
      - name: Obtain a GitHub App Installation Access Token
        id: github-app-token
        run: |
          TOKEN="$(npx obtain-github-app-installation-access-token ci ${{ secrets.GH_APP_CREDENTIALS_TOKEN }})"
          echo "::add-mask::$TOKEN"
          echo "TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Use the obtained token
        run: |
          curl -X POST \
            -H "Authorization: Bearer $TOKEN" \
            -H 'Accept: application/vnd.github.v3+json' \
            -d '{"context":"test","state":"success"}' \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$GITHUB_SHA"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout Helm configs repo
        uses: actions/checkout@v4
        with:
          repository: andrislapins/cv_web
          token: ${{ env.TOKEN }}
          path: configs

      - name: Update and push to Helm configs
        run: |
          cd configs
          git config --global user.email "hetzner-cloud-cv-web-gh-app[bot]@users.noreply.github.com"
          git config --global user.name "hetzner-cloud-cv-web-gh-app[bot]"
          sed -i "s/backendHelmChartVersion: .*/backendHelmChartVersion: ${BACKEND_HELM_CHART_VERSION}/" ./argocd/dev/values.yaml
          sed -i "s/frontendHelmChartVersion: .*/frontendHelmChartVersion: ${FRONTEND_HELM_CHART_VERSION}/" ./argocd/dev/values.yaml
          git add argocd/dev/values.yaml
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git remote set-url origin https://x-access-token:${{ env.TOKEN }}@github.com/andrislapins/cv_web.git
            git commit -m "[helm version bump]: frontend ${FRONTEND_HELM_CHART_VERSION} / backend ${BACKEND_HELM_CHART_VERSION}"
            git push
          fi