---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cv-web-frontend.fullname" . }}-nginx-config
  namespace: {{ .Values.general.appNamespace }}
  labels:
    app: {{ include "cv-web-frontend.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
data:
  nginx.conf: |
    log_format json_logs escape=json '{'
      '"time_local":"$time_local",'
      '"remote_addr":"$remote_addr",'
      '"http_x_forwarded_for":"$http_x_forwarded_for",'
      '"http_x_real_ip":"$http_x_real_ip",'
      '"request_method":"$request_method",'
      '"request_uri":"$request_uri",'
      '"status":"$status",'
      '"body_bytes_sent":"$body_bytes_sent",'
      '"request_time":"$request_time",'
      '"upstream_response_time":"$upstream_response_time",'
      '"upstream_addr":"$upstream_addr",'
      '"upstream_status":"$upstream_status",'
      '"http_referer":"$http_referer",'
      '"http_user_agent":"$http_user_agent",'
      '"http_host":"$http_host",'
      '"server_name":"$server_name"'
    '}';
    server {
      listen       3000;
      listen  [::]:3000;
      server_name  localhost;
      client_max_body_size 50M;
      access_log /dev/stdout json_logs;
      root /usr/share/nginx/html;
      real_ip_header X-Forwarded-For;
      set_real_ip_from 0.0.0.0/0;
      real_ip_recursive on;

      # Handle frontend routes
      location / {
          try_files $uri $uri/ /index.html;
      }

      # Proxy API requests to the backend service
      location /api/ {
          proxy_pass {{ .Values.general.backendInnerUrl }};
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header X-Real-IP $http_x_forwarded_for;
          proxy_set_header X-Forwarded-For $http_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
    }
